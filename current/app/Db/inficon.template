##  Inficon MPH DataDEV
#
##  DEV
##       EPICS prefix
##  PORT
##       ASYN PORT_NAME
##
##

#record(mbbiDirect, "$(DEV):SYST_STAT")
#{
#    field(DESC, "read system status")
#    field(DTYP, "asynUInt32Digital")
#    field(INP,  "@asynMask($(PORT) 0 0xFFFFFFFF)SYST_STAT")
#    field(SCAN, "$(CSCAN) second")
#}

record(mbbo, "$(DEV):INFICON_STATE")
{
#    field(PINI, "YES")
    field(DESC, "Current state")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "IDLE")
    field(ONST, "MONITORING")
    field(TWST, "READ IN CYCLES")
    field(THST, "LEAKCHEK")
}

record(stringin, "$(DEV):IP")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 0)IP")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(DEV):MAC")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 0)MAC")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(DEV):GET_COMM_PARAM")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 0)GET_COMM_PARAM")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):GET_SENS_INFO")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 0)GET_SENS_INFO")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):SENS_NAME")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 0)SENS_NAME")
    field(SCAN, "I/O Intr")
}

record(stringin,"$(DEV):SENS_DESC")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 0)SENS_DESC")
    field(SCAN, "I/O Intr")
}

record(longin, "$(DEV):SENS_SN")
{
    field(DESC, "Sensor SN")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),0,0xFFFFFFFF)SENS_SN")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(DEV):GET_DEV_STATUS")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 0)GET_DEV_STAT")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):GET_CH1_SCAN_SETUP")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 1)GET_CH_SCAN_SETUP")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):GET_CH4_SCAN_SETUP")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT), 4)GET_CH_SCAN_SETUP")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):GET_DIAG_DATA")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))GET_DIAG_DATA")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):GET_SCAN_INFO")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))GET_SCAN_INFO")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):GET_SENS_DETECT")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))GET_SENS_DETECT")
    field(SCAN, "$(CSCAN) second")
}

record(stringin, "$(DEV):GET_SENS_FILT")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))GET_SENS_FILT")
    field(SCAN, "$(CSCAN) second")
}

record(ai, "$(DEV):GET_PRESS")
{
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT))GET_PRESS")
    field(SCAN, "$(DSCAN) second")
}

record(waveform,"$(DEV):GET_SCAN")
{
    field(DTYP, "asynFloat32ArrayIn")
    field(INP,  "@asyn($(PORT))GET_SCAN")
    field(SCAN, "$(CSCAN) second")
    field(FTVL, "FLOAT")
    field(NELM, "16384")
    field(PREC, "4")
}

record(stringout, "$(DEV):CH1_MODE")
{
    field(DESC, "Ch1 measurement mode")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT), 1)CH_MODE")
	field(VAL,  "Sweep")
}

record(stringout, "$(DEV):CH4_MODE")
{
    field(DESC, "Ch4 measurement mode")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT), 4)CH_MODE")
	field(VAL,  "Single")
}